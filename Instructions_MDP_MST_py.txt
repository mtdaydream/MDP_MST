The Maximum Distance Problem and Minimum Spanning Trees
=======================================================

Computational Exploration
-------------------------

See [arXiv paper](https://arxiv.org/abs/2004.07323) for details.

Given a compact set E in n-dimensional real space (\R^n) and a radius
s > 0, the maximum distance problem (MDP) asks to find a compact and
connected subset of \R^n of smallest one dimensional Hausdorff
measure, whose s-neighborhood covers E. For sets E in 2D, we prove
that minimizing over minimal spanning trees (MSTs) that connect the
centers of balls of radius s, which cover E, solves the MDP.

Here you can computationally explore instances of MDP, and try to
solve them by forming MSTs. You select the domain E in 2D (in the unit
square, to be precise), which is supposed to be a closed, bounded set
with possible disjoint holes. You then select vertices for the
MST. For a given choice of s, the coverage of E by the set (MST +
s-ball) is verified and displayed. You can then change s, and/or pick
a different set of vertices for the MST.


  Required packages
 
 * [Shapely](https://pypi.org/project/Shapely/)
 * [Descartes](https://pypi.org/project/descartes/)
 * [Figures](https://pypi.org/project/Figures/) (see NOTE below)
 * matplotlib
 * numpy

 * scipy (for [distance
   computations](https://docs.scipy.org/doc/scipy/reference/spatial.distance.html))
 
  NOTE: One may have trouble getting Figures installed, so make sure
  you save the file figures.py (included in the repo with this file)
  in the current directory (or in a location where your Python looks
  for automatically). See [this web
  page](https://github.com/Toblerity/Shapely/issues/536) for details
  of this error.


 Steps
 -----
 
 Step 0: Create canvas of unit square, with grid

 Step 1: Select domain to be covered 
         
  Click anywhere (using the mouse) inside the grid once to initialize,
  and then click the **sequence** of points that form the boundary of
  the domain E. The sequence could be clockwise (CW) or
  counterclockwise (CCW). A left click selects a point, a right click
  cancels the previous selection. Press *Enter* when done. The
  boundary is set as the collection of edges connecting consecutive
  points in the sequence (with the last point connecting to the first
  point).
  
  Errors could result if the boundary loops on itself (i.e., crosses
  itself at a point). Either cancel selections of points going back to
  remove the loop, and re-select the boundary points. Or, cancel the
  program run and restart.

  The user is now prompted to enter the number nHoles of **disjoint**
  holes to be be carved out from inside the domain selected as
  above. Each hole is selected in the same way as selecting \boundary
  E. The order of points of each hole could be CW or CCW, and could
  be different from the order chosen for selecting points of
  \boundary E. Enter nHoles = 0 to not include any holes.

 Step 2: Select vertices for MST
  
  The vertices are chosen from among the grid points, with
  points clicked by the user rounded to nearest grid
  points. Start by clicking anywhere inside the domain to
  initialize, and then select points by left clicks on the
  mouse. Right click cancels previous selection. Press *Enter*
  when done.
  
 Step 3: MST Computation
  
  We construct the undirected graph G = (V_G, E_G) with cost C_G(E_G),
  and apply Kruskal's algorithm for MST that uses path optimality
  conditions.
  
  The implementation of Union-Find is *somewhat naive* - using an n_G
  x n_G matrix (n_G=|V_G|) to manipulate the connected components.

 Step 4: Display Result MST + s-Ball over Domain


 Continuing the run, and making modifications
 --------------------------------------------

 The user can save the figure if wanted, and then click inside the
 figure to continue. The program prompts the user to enter the next
 Step, which can be set as 1, 2, 4, or any negative number outside
 [0,4] (e.g., -1) to terminate. The options are as follows.

 - To try a different s with the same MST,  enter 4.

 - To select a different set of vertices for a new MST to cover the
   same domain, enter 2.
 
 - To start with a new domain, enter 1.


To choose a new set of points for the MST, i.e., when repeating Step
2, it could be helpful to save the original figure (as an image), and
have it open side-by-side when clicking the new set of points.
